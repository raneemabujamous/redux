{"ast":null,"code":"var _jsxFileName = \"/home/raneemabujamous/redux/src/component/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterProducts } from \"../action/Action\";\nimport { selectCategory } from \"../action/Action\";\nimport MediaCard from \"./MediaCard \";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Products(props) {\n  _s();\n\n  useEffect(() => {\n    props.filterProducts(props.cat.activeCategory.normalizedName, props.cat.products);\n    console.log(\"props.prod.filteredProducts\", props.prod.filteredProducts); //prod from name of reducer when i call it inside store\n  }, [props.cat.activeCategory]); ///// this use effect would be run when we change in active category array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"props.prod.filteredProducts\", props.prod.filteredProducts), props.prod.filterProducts.map(product => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MediaCard, {\n          product: product\n        }, product.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Products;\n\nconst mapStateToProps = state => {\n  console.log(\"STATE???\", state);\n  return state;\n};\n\nconst mapDispatchToProps = {\n  filterProducts,\n  selectCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/raneemabujamous/redux/src/component/Products.js"],"names":["React","useEffect","connect","filterProducts","selectCategory","MediaCard","Products","props","cat","activeCategory","normalizedName","products","console","log","prod","filteredProducts","map","product","name","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvBN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACJ,cAAN,CACEI,KAAK,CAACC,GAAN,CAAUC,cAAV,CAAyBC,cAD3B,EAEEH,KAAK,CAACC,GAAN,CAAUG,QAFZ;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CN,KAAK,CAACO,IAAN,CAAWC,gBAAtD,EALc,CAK2D;AAC1E,GANQ,EAMN,CAACR,KAAK,CAACC,GAAN,CAAUC,cAAX,CANM,CAAT,CADuB,CAOS;;AAChC,sBACE;AAAA,eACGG,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CN,KAAK,CAACO,IAAN,CAAWC,gBAAtD,CADH,EAEGR,KAAK,CAACO,IAAN,CAAWX,cAAX,CAA0Ba,GAA1B,CAA+BC,OAAD,IAAa;AAC1C;AAAA;AAAA,+BACE,QAAC,SAAD;AAA8B,UAAA,OAAO,EAAEA;AAAvC,WAAgBA,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAGD,KAJA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlBQZ,Q;;KAAAA,Q;;AAoBT,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjCR,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,KAAxB;AACA,SAAOA,KAAP;AACD,CAHD;;AAIA,MAAMC,kBAAkB,GAAG;AAAElB,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAA3B;AACA,eAAeF,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterProducts } from \"../action/Action\";\nimport { selectCategory } from \"../action/Action\";\nimport MediaCard from \"./MediaCard \";\nfunction Products(props) {\n  useEffect(() => {\n    props.filterProducts(\n      props.cat.activeCategory.normalizedName,\n      props.cat.products\n    );\n    console.log(\"props.prod.filteredProducts\", props.prod.filteredProducts); //prod from name of reducer when i call it inside store\n  }, [props.cat.activeCategory]); ///// this use effect would be run when we change in active category array\n  return (\n    <div>\n      {console.log(\"props.prod.filteredProducts\", props.prod.filteredProducts)}\n      {props.prod.filterProducts.map((product) => {\n        <>\n          <MediaCard key={product.name} product={product} />\n        </>;\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"STATE???\", state);\n  return state;\n};\nconst mapDispatchToProps = { filterProducts, selectCategory };\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n"]},"metadata":{},"sourceType":"module"}