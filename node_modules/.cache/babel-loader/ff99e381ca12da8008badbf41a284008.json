{"ast":null,"code":"var _jsxFileName = \"/home/raneemabujamous/redux/src/component/MediaCard .js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\nexport default function MediaCard(props) {\n  _s();\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  function getName(name) {\n    console.log(name);\n    console.log(state);\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    className: \"card-ui\",\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: props.product.img,\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: props.product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: props.product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"h6\",\n          children: [\"Price : \", props.product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"h6\",\n          children: [\"available : \", props.product.inventoryCount, \" pieces\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => {\n        getName(props.product.name);\n      },\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MediaCard, \"xb9HgywBhk+Xdg0WnUWwE+voy38=\", true, function () {\n  return [useSelector, useStyles];\n});\n\n_c = MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/home/raneemabujamous/redux/src/component/MediaCard .js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useSelector","useStyles","root","maxWidth","media","height","MediaCard","props","state","dispatch","useDispatch","getName","name","console","log","classes","product","img","description","price","inventoryCount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function MediaCard(props) {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  function getName(name) {\n    console.log(name);\n\n    console.log(state);\n  }\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} className=\"card-ui\">\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.product.img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.product.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.product.description}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" component=\"h6\">\n            Price : {props.product.price}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" component=\"h6\">\n            available : {props.product.inventoryCount} pieces\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => {\n          getName(props.product.name);\n        }}\n      >\n        add\n      </Button>\n      <Button size=\"small\" color=\"primary\">\n        delete\n      </Button>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}