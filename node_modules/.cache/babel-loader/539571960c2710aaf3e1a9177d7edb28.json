{"ast":null,"code":"import { products, categories } from \"../store/data\";\nexport const initialState = {\n  categories: categories,\n  activeCategory: {},\n  products: products\n};\nexport const catogiryReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"SELECT_CATEGORY\":\n      const categories = state.categories;\n      const products = state.products;\n      let activeCategory;\n      state.categories.map(item => {\n        if (item.normalizedName == payload) {\n          activeCategory = item;\n        }\n      });\n      return {\n        categories,\n        activeCategory,\n        products\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/raneemabujamous/redux/src/reducer/selectReducer.js"],"names":["products","categories","initialState","activeCategory","catogiryReducer","state","action","type","payload","map","item","normalizedName"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,eAArC;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BD,EAAAA,UAAU,EAAEA,UADc;AAE1BE,EAAAA,cAAc,EAAE,EAFU;AAG1BH,EAAAA,QAAQ,EAAEA;AAHgB,CAArB;AAMP,OAAO,MAAMI,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AAC/D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAK,iBAAL;AACE,YAAMN,UAAU,GAAGI,KAAK,CAACJ,UAAzB;AACA,YAAMD,QAAQ,GAAGK,KAAK,CAACL,QAAvB;AACA,UAAIG,cAAJ;AACAE,MAAAA,KAAK,CAACJ,UAAN,CAAiBQ,GAAjB,CAAsBC,IAAD,IAAU;AAC7B,YAAIA,IAAI,CAACC,cAAL,IAAuBH,OAA3B,EAAoC;AAClCL,UAAAA,cAAc,GAAGO,IAAjB;AACD;AACF,OAJD;AAMA,aAAO;AAAET,QAAAA,UAAF;AAAcE,QAAAA,cAAd;AAA8BH,QAAAA;AAA9B,OAAP;;AAEF;AACE,aAAOK,KAAP;AAdJ;AAgBD,CAnBM","sourcesContent":["import { products, categories } from \"../store/data\";\nexport const initialState = {\n  categories: categories,\n  activeCategory: {},\n  products: products,\n};\n\nexport const catogiryReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"SELECT_CATEGORY\":\n      const categories = state.categories;\n      const products = state.products;\n      let activeCategory;\n      state.categories.map((item) => {\n        if (item.normalizedName == payload) {\n          activeCategory = item;\n        }\n      });\n\n      return { categories, activeCategory, products };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}